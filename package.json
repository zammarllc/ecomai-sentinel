{
  "name": "ecomai-sentinel",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "description": "Backend utilities and API handlers for EcomAI Sentinel.",
  "scripts": {
    "start": "node api/queries/index.js",
    "lint": "eslint .",
    "test": "node --test"
  },
  "dependencies": {
    "@prisma/client": "^5.18.0"
  },
  "devDependencies": {
  "name": "ai-analytics-service",
  "version": "1.0.0",
  "description": "AI-assisted analytics service providing customer query responses and sales forecasting",
  "main": "server.js",
  "type": "commonjs",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:deploy": "prisma migrate deploy"
  },
  "keywords": [
    "express",
    "ai",
    "openai",
    "prisma",
    "analytics"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@prisma/client": "^5.20.0",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "openai": "^4.60.0",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "nodemon": "^3.1.4",
    "prisma": "^5.20.0"
  "name": "auth-service",
  "version": "0.1.0",
  "description": "Authentication service with Prisma, bcrypt, and JWT-based flows.",
  "main": "src/server.js",
  "type": "commonjs",
  "scripts": {
    "start": "node src/server.js",
    "dev": "NODE_ENV=development node src/server.js",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate deploy"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "dependencies": {
    "@prisma/client": "^5.7.0",
    "bcrypt": "^5.1.1",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "jsonwebtoken": "^9.0.2"
  },
  "devDependencies": {
    "prisma": "^5.7.0"
  "name": "fullstack-vercel-project",
  "private": true,
  "version": "0.1.0",
  "name": "project-monorepo",
  "version": "0.1.0",
  "private": true,
  "workspaces": [
    "frontend",
    "backend"
  ],
  "engines": {
    "node": ">=18.18.0"
  },
  "scripts": {
    "postinstall": "npm run generate --workspace backend",
    "build": "npm run build --workspace backend && npm run build --workspace frontend",
    "lint": "npm run lint --workspace backend && npm run lint --workspace frontend",
    "generate": "npm run generate --workspace backend"
  "scripts": {
    "build": "echo \"TODO: Implement workspace build pipeline\"",
    "dev": "echo \"TODO: Implement aggregated dev command\"",
    "test": "echo \"TODO: Implement workspace test runner\""
  }
}
