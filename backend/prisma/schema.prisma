generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  tier         String   @default("free")
  stores       Store[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Store {
  id              String           @id @default(cuid())
  name            String
  platform        String
  userId          String
  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  inventoryItems  InventoryItem[]
  customerQueries CustomerQuery[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@index([userId])
}

model InventoryItem {
  id            String        @id @default(cuid())
  productName   String
  sku           String        @unique
  currentStock  Int
  storeId       String
  store         Store         @relation(fields: [storeId], references: [id], onDelete: Cascade)
  forecastLogs  ForecastLog[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([storeId])
}

model CustomerQuery {
  id           String   @id @default(cuid())
  queryText    String
  aiResponse   String?
  customerEmail String
  status       String   @default("open")
  stockRelated Boolean  @default(false)
  storeId      String
  store        Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([storeId])
}

model ForecastLog {
  id             String        @id @default(cuid())
  itemId         String
  item           InventoryItem @relation(fields: [itemId], references: [id], onDelete: Cascade)
  predictedDemand Int
  reasoning      String
  alertLevel     String        @default("normal")
  createdAt      DateTime      @default(now())

  @@index([itemId])
}
